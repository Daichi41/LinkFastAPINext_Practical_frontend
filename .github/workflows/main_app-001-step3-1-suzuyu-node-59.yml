# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - app-001-step3-1-suzuyu-node-59

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read # This is required for actions/checkout

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        env:
          NEXT_PUBLIC_API_ENDPOINT: ${{ secrets.NEXT_PUBLIC_API_ENDPOINT }}
        run: |
          if npm run build --silent 2>/dev/null; then
            echo "Build completed successfully"
          else
            echo "Build script not found or failed"
            exit 1
          fi

      - name: Run tests (if available)
        run: |
          if npm run test --silent 2>/dev/null; then
            echo "Tests completed successfully"
          else
            echo "No test script found or tests failed - continuing deployment"
          fi
        continue-on-error: true

      - name: Prepare deployment package
        run: |
          echo "Preparing deployment files..."
          mkdir -p deploy/.next
          
          # Copy standalone build files
          if [ -d ".next/standalone" ]; then
            cp -r .next/standalone/* deploy/
            echo "Copied standalone files"
          else
            echo "Error: .next/standalone directory not found"
            exit 1
          fi
          
          # Copy static files
          if [ -d ".next/static" ]; then
            cp -r .next/static deploy/.next/static
            echo "Copied static files"
          else
            echo "Warning: .next/static directory not found"
          fi
          
          # Copy public files (if they exist)
          if [ -d "public" ]; then
            cp -r public deploy/public
            echo "Copied public files"
          else
            echo "No public directory found"
          fi
          
          # Create server.js symlink for Azure App Service
          if [ -f "deploy/server.js" ]; then
            echo "server.js already exists"
          elif [ -f "deploy/index.js" ]; then
            ln -s index.js deploy/server.js
            echo "Created server.js symlink to index.js"
          else
            echo "Warning: Neither server.js nor index.js found"
          fi
          
          # Create web.config for proper Next.js routing
          cat > deploy/web.config << 'EOF'
<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <system.webServer>
    <handlers>
      <add name="iisnode" path="server.js" verb="*" modules="iisnode"/>
    </handlers>
    <rewrite>
      <rules>
        <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
          <match url="^server.js\/debug[\/]?" />
        </rule>
        <rule name="StaticContent">
          <action type="Rewrite" url="public{REQUEST_URI}"/>
        </rule>
        <rule name="DynamicContent">
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
          </conditions>
          <action type="Rewrite" url="server.js"/>
        </rule>
      </rules>
    </rewrite>
    <security>
      <requestFiltering>
        <hiddenSegments>
          <remove segment="bin"/>
        </hiddenSegments>
      </requestFiltering>
    </security>
    <httpErrors existingResponse="PassThrough" />
  </system.webServer>
</configuration>
EOF
          
          # List deployed files for verification
          echo "Deployment package contents:"
          ls -la deploy/

      - name: Create deployment archive
        run: |
          cd deploy
          zip -r ../release.zip .
          cd ..
          echo "Archive created: $(ls -lh release.zip)"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Extract deployment package
        run: |
          unzip release.zip -d deploy
          echo "Extracted files:"
          ls -la deploy/
      
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'app-001-step3-1-suzuyu-node-59'
          slot-name: 'Production'
          package: ./deploy
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_C3BBF4D04B664D268D22F97475190E06 }}

      - name: Deployment summary
        run: |
          echo "ðŸš€ Deployment completed successfully!"
          echo "App URL: ${{ steps.deploy-to-webapp.outputs.webapp-url }}"
